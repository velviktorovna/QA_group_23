1. На локальном репозитории сделать ветки:
git branch Postman
git branch Jmeter 
git branch CheckLists
git branch Bag_Reports
git branch SQL
git branch Charles
git branch Mobile_testing

2. Запушить все ветки на внешний репозиторий:
git push -u origin --all

3. В ветке Bag Reports сделать текстовый документ со структурой баг репорта
git checkout Bag_Reports
touch Bag_report.txt
vim Bag_report.txt
i + text
"1) Summary (заголовок) - краткое описание сути проблемы. В этом поле мы должны коротко и ясно описать выявленный дефект. Уже на этом этапе вы можете придерживаться правила «Что? Где? Когда или в каких условиях?». Не лишним будет добавить и данные о тестовом окружении, под которым выявлен дефект.

2) Description (описание) - Содержание этого поля отличается в зависимости от баг-трекинговой системы. Например, JIRA или Redmine предполагают описание шагов воспроизведения ошибки.

3) Actual/expected result (фактический/ожидаемый результат) 

4) Attachments (вложения) - этот элемент репорта позволяет проиллюстрировать суть бага и поделиться дополнительными данными. 

5) Priority (приоритет) - поле, которое содержит информацию о срочности исправления дефекта. 
P1 High (высокий приоритет);
P2 Medium (средний приоритет);
P3 Low (низкий приоритет);

6) Severity (серьёзность) - степень серьёзности влияния на систему.
Blocker — это статус для проблем, которые прерывают работу приложения.
Critical — такой баг значительно влияет на работоспособность, но не приводит к блокировке.
Major — ошибка, которая не способствует фундаментальным изменениям, но может привести к незначительным искажениям отображения информации или выполнения некоторых функций.
Minor — не влияет на работу системы. К этой категории можно отнести ошибки в текстовых блоках или визуальных решениях.

7) Status (статус) - информация о том, в каком состоянии текущая задача.
New – новый баг;
Feedback – требуется обратная связь;
Acknowledged – с содержанием документа ознакомились;
Accepted – ошибка воспроизвелась и была подтверждена;
Assigned – исправление ошибки назначено;
Resolved – изменения были внесены;
Closed – дефект больше не воспроизводится.

8) Автор (Author) - создатель баг репорта.
9) Назначен на (Assigned To)	- имя сотрудника, назначенного на решение проблемы

10) Описание
Шаги воспроизведения (Steps to Reproduce) - шаги, по которым можно легко воспроизвести ситуацию, приведшую к ошибке.
Фактический Результат (Result) - результат, полученный после прохождения шагов к воспроизведению
Ожидаемый результат (Expected Result)	- ожидаемый правильный результат"
esc + :wq

4. Запушить структуру багрепорта на внешний репозиторий
git commit -am Bag_report.txt
git push

5. Вмержить ветку Bag Reports в Main
git checkout main
git merge Bag_Reports

6. Запушить main на внешний репозиторий.
git push

7. В ветке CheckLists набросать структуру чек листа.
git checkout Checklists
vim checklist.txt
i+text
"Чек-лист — это список проверок для тестирования продукта. 

Чек-лист содержит:

- Список проверок (с требуемой степенью детализации)
- Окружение проверки
- Сборка, на которой проводилось тестирование
- Тестовое окружение (если применимо)
- Информация о тестировщике 
- Результат проверки

Выполненные пункты отмечаются статусами, например: “Passed”, “Failed”, “Blocked”, “Skipped”, “Not run”."
esc + :wq

8. Запушить структуру на внешний репозиторий
git commit -am checklist.txt
git push

9. На внешнем репозитории сделать Pull Request ветки CheckLists в main
Pull request

10. Синхронизировать Внешнюю и Локальную ветки Main
git checkout main
git pull

