1. Тестирование безопасности 
Каждый пользователь приложения хочет, чтобы его данные или личная информация находилась в безопасности и не досталась злоумышленникам. Для этого при тестировании мобильных приложений под iOS мы проводим полный тест на проникновение (пентестинг).

*Тестируя iPhone приложения с FireSheep, мы проверяем возможность похищения сессий пользователя, и проверки наличия конфиденциальной информации в сессиях:


Проверка возможности похищения сессий пользователя
Проверка наличия конфиденциальной информации в сессиях

2. In-App Purchase (Покупка в приложении)
В ходе тестирования в iOS приложениях функции In-App Purchase стоит обращать внимание, что абсолютно все то, что заявлено в приложении (содержимое, цены), должно соответствовать тому, что видит пользователь. Не стоит упускать вариант восстановления покупок, совершенных пользователем, после обновления приложения
.

Проверить работу функции при установленных ограничениях в настройках

*При установке ограничений в настройках должно появляться предупреждение при попытке осуществить In-App Purchase.

Проверить работу функции при различных параметрах и настройках Apple ID

*При входе с помощью другого Apple ID информация о покупке с помощью других данных не сохраняется, тем самым сохраняя конфиденциальность пользовательских данных. 

Проверить цель использования IAP


1. Приложения, которые используют IAP с целью покупки «кредитов» или другой валюты, обязаны обеспечить использование этих «кредитов» внутри себя же.
2. В случае ограничения срока годности на «кредиты» и другие валюты приложение не использует IAP для их покупки.
3. Подписка на контент посредством IAP должна быть предоставлена пользователю на любых iOS-устройствах, принадлежащих ему, с учетом длительности, которая составляет не менее 30 дней.


3. Разные типы подключений
Сегодня почти все телефоны используют современные технологии для передачи мобильного трафика. С помощью настроек устройства можно получить доступ к типу устанавливаемого соединения (2G/3G/4G). Стоит отметить, что наложение ограничений связи касается не только мобильного трафика, но и Wi-Fi.

Способы тестирования iOS приложений при различных скоростях передачи данных


1. Использование симуляторов/эмуляторов;
2. Сторонняя прошивка роутера;
3. Стороннее ПО (Различных прокси).

Переключение типов соединения и отсутствие связи
1. Переключение приложения на мобильный трафик (2G/2.5G/3G/4G) при выключении Wi-Fi;
2. Автоматическое переключение на Wi-Fi при его включении и нахождении нужной сети.


Проверка варианта публичной сети требующей авторизации
1. Web-аутентификация сразу после установки Wi-Fi соединения. Данный тип подключения не дает право на доступ к сервисам, отличающихся от начального;
2. Подключение к локальной сети роутера через привязку к MAC-адресу устройства. Данный тип соединения дает возможность подключения к Wi-Fi, однако ограничивает доступ к пользованию интернетом;
3. Переход на Web аутентификацию при отправке запроса на любой публичный адрес.
 
4. Ресурсы устройства

Нехватка места при установке или работе мобильного IOS приложения:
*Должно отображаться уведомление с необходимой информацией о сложившейся ситуации. «Крэш» приложения не должен происходить.
Недостаток памяти для функционирования системы при активной либо фоновой работе приложения
*Все данные, полученные при работе приложения, должны сохраняться (если иное не предполагается функционалом самого приложения, например, синхронизация данных с сервером).
5. Разрядка батареи

Проверить, что при разряженной батарее отображается уведомление
Заряд батареи в смартфонах держится не так уж и долго, и поэтому, при работе с вашим iPhone приложением, необходимо проверить подобный случай. При разрядке батареи пользователю должна быть предоставлена нотификация разряженной батареи, которая доступна при открытом приложении. Все элементы и формы уведомления должны отображаются корректно.
Проверить, что при полной разрядке приложение завершает работу без ошибок
При работе с телефоном нередко приходится сталкиваться со случаем полной разрядки девайса, и предусмотреть такие ситуации и избежать их зачастую не представляется возможным при работе именно с Вашим приложением.


6. Работа с прерываниями

Телефон нужен в первую очередь для звонков, и имеется очень большая вероятность, что при работе с вашим приложением, пользователю кто-нибудь позвонит, или напишет сообщение. При тестировании iPhone приложений подобную ситуацию нужно проверять на различных формах данного приложения. Помимо этого, форма для входящего звонка или сообщения должна быть доступна при открытом приложении, все элементы приложения и формы просто обязаны отображаться корректно и не перекрывать друг друга, а в случае с интерактивными приложениями, они прерываются на момент звонка, и возобновляются по его завершению.


7. Сворачивание/разворачивание активного приложения

При сворачивании и разворачивании должна быть обеспечена корректная приостановка iOS приложения при его сворачивании, и продолжение процесса при разворачивании. Особенно данная проверка актуальна для игр. Ведь во время игрового процесса, иногда долгого и изнуренного, у пользователя рано или поздно появляется причина, чтобы свернуть игру и естественно вернуться снова для достижения заветной цели и потерять все что непосильным трудом было добыто очень огорчит пользователя.

Источник: 
http://qawebmart.ru/ 
