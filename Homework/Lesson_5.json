{
	"info": {
		"_postman_id": "829a121a-9ac3-4e3d-810b-da6871be006c",
		"name": "Lesson_5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Test string\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}first?name=Valery&age=23&salary=1000",
					"host": [
						"{{url}}first"
					],
					"query": [
						{
							"key": "name",
							"value": "Valery"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp_data = pm.response.json();\r",
							"var req_data = pm.request.body.formdata.toObject();\r",
							"\r",
							"var resp_name = resp_data.name;\r",
							"var resp_age = resp_data.age;\r",
							"var resp_salary = resp_data.salary;\r",
							"var req_name = req_data.name;\r",
							"var req_age = req_data.age;\r",
							"var req_salary = req_data.salary;\r",
							"\r",
							"pm.test(\"Test name\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"pm.test(\"Test age\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"pm.test(\"Test salary\", function () {\r",
							"    pm.expect(resp_salary).to.eql(+req_salary);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Test name - request\", function () {\r",
							"    pm.expect(req_name).to.eql(resp_name);\r",
							"});\r",
							"pm.test(\"Test age - request\", function () {\r",
							"    pm.expect(req_age).to.eql(resp_age);\r",
							"});\r",
							"pm.test(\"Test salary - request\", function () {\r",
							"    pm.expect(+req_salary).to.eql(resp_salary);\r",
							"});\r",
							"\r",
							"\r",
							"console.log(resp_data.family);\r",
							"\r",
							"\r",
							"pm.test(\"Salary*4\", function () {\r",
							"    pm.expect(+(resp_data.family.u_salary_1_5_year)).to.eql(resp_data.salary*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Valery",
							"type": "text"
						},
						{
							"key": "age",
							"value": "23",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_3",
					"host": [
						"{{url}}user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"var resp_data = pm.response.json();\r",
							"var req_data = pm.request.url.query.toObject();\r",
							"\r",
							"var req_name = req_data.name;\r",
							"var req_age = req_data.age;\r",
							"var req_salary = req_data.salary;\r",
							"\r",
							"pm.test(\"Test name\", function () {\r",
							"    var resp_name = resp_data.name;\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"pm.test(\"Test age\", function () {\r",
							"    var resp_age = resp_data.age;\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"pm.test(\"Test salary\", function () {\r",
							"    var resp_salary = resp_data.salary;\r",
							"    pm.expect(resp_salary).to.eql(+req_salary);\r",
							"});\r",
							"\r",
							"\r",
							"console.log(resp_data.family);\r",
							"\r",
							"\r",
							"pm.test(\"Test dog = name parametrs\", () => {\r",
							"    pm.expect(resp_data.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"pm.test(\"Test dog = age parametrs\", () => {\r",
							"   pm.expect(resp_data.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Test dog - name\", () => {\r",
							"    var dog_name = resp_data.family.pets.dog.name;\r",
							"    pm.expect(dog_name).to.eql(\"Luky\");\r",
							"});\r",
							"pm.test(\"Test dog - age\", () => {\r",
							"    var dog_age = resp_data.family.pets.dog.age;\r",
							"    pm.expect(dog_age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}object_info_3?name=Valery&age=23&salary=1000",
					"host": [
						"{{url}}object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Valery"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"var resp_data = pm.response.json ();\r",
							"var req_data = pm.request.url.query.toObject();\r",
							"\r",
							"var resp_name = resp_data.name;\r",
							"var resp_age = resp_data.age;\r",
							"\r",
							"var req_name = req_data.name;\r",
							"var req_age = req_data.age;\r",
							"var req_salary = req_data.salary;\r",
							"\r",
							"pm.test(\"Test name\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"pm.test(\"Test age\", function () {\r",
							"    pm.expect(resp_age).to.eql(+req_age);\r",
							"});\r",
							"\r",
							"var resp_salary = resp_data.salary;\r",
							"var req_salary = request.data.salary = 1000;\r",
							"console.log(\"resp_salary =\" + resp_salary);\r",
							"console.log(\"req_salary =\" + req_salary);\r",
							"\r",
							"var resp_salary_1000 = resp_data.salary[0];\r",
							"var resp_salary_2000 = parseInt(resp_data.salary[1]);\r",
							"var resp_salary_3000 = parseInt(resp_data.salary[2]);\r",
							"\r",
							"console.log(\"Resp_salary_1000 =\" + resp_salary_1000);\r",
							"console.log(\"Resp_salary_2000 =\" + resp_salary_2000);\r",
							"console.log(\"Resp_salary_3000 =\" + resp_salary_3000);\r",
							"\r",
							"\r",
							"pm.test(\"Test salary_0\", function () {\r",
							"    pm.expect(resp_salary[0]).to.eql(req_salary);\r",
							"});\r",
							"pm.test(\"Test salary_1\", function () {\r",
							"    pm.expect(+resp_salary[1]).to.eql(req_salary*2);    \r",
							"});\r",
							"pm.test(\"Test salary_2\", function () {\r",
							"    pm.expect(+resp_salary[2]).to.eql(req_salary*3);    \r",
							"});\r",
							"\r",
							"\r",
							"pm.environment.set(\"name\", \"Valery\");\r",
							"pm.environment.set(\"age\", \"23\");\r",
							"pm.environment.set(\"salary\", \"1000\");\r",
							"\r",
							"for (let i = 0; i < resp_data.salary.length; i++) {\r",
							"    console.log(\"Salary_console_1 = \", resp_data.salary[i]);\r",
							"}\r",
							"\r",
							"for (i of resp_data.salary){\r",
							"    console.log(\"Salary_console_2 = \", i);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}object_info_4?name=Valery&age=23&salary=1000",
					"host": [
						"{{url}}object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Valery"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"var resp_data = pm.response.json();\r",
							"var req_data = pm.request.body.formdata.toObject();\r",
							"\r",
							"pm.test(\"Test parametrs_0\", () => {\r",
							"    pm.expect(resp_data.start_qa_salary).exist;\r",
							"});\r",
							"pm.test(\"Test parametrs_1\", () => {\r",
							"    pm.expect(resp_data.qa_salary_after_6_months).exist;\r",
							"});\r",
							"pm.test(\"Test parametrs_2\", () => {\r",
							"    pm.expect(resp_data.qa_salary_after_12_months).exist;\r",
							"});\r",
							"pm.test(\"Test parametrs_3\", () => {\r",
							"    pm.expect(resp_data[\"qa_salary_after_1.5_year\"]).exist;\r",
							"});\r",
							"pm.test(\"Test parametrs_4\", () => {\r",
							"    pm.expect(resp_data[\"qa_salary_after_3.5_years\"]).exist;\r",
							"});\r",
							"pm.test(\"Test parametrs person\", () => {\r",
							"    pm.expect(resp_data).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"var req_start = +req_data.start_qa_salary;\r",
							"\r",
							"pm.test(\"Test salary\", function () {\r",
							"    var resp_start = resp_data.start_qa_salary;\r",
							"    pm.expect(resp_start).to.eql(req_start);\r",
							"});\r",
							"pm.test(\"Test 6_months\", function () {\r",
							"    var resp_6_months = resp_data.qa_salary_after_6_months;\r",
							"    pm.expect(resp_6_months).to.eql(req_start*2);\r",
							"});\r",
							"pm.test(\"Test 12_months\", function () {\r",
							"    var resp_12_months = resp_data.qa_salary_after_12_months;\r",
							"    pm.expect(resp_12_months).to.eql(req_start*2.7);\r",
							"});\r",
							"pm.test(\"Test 1.5_year\", function () {\r",
							"    var resp_15_year = resp_data[\"qa_salary_after_1.5_year\"];\r",
							"    pm.expect(resp_15_year).to.eql(req_start*3.3);\r",
							"});\r",
							"pm.test(\"Test 3.5_years\", function () {\r",
							"    var resp_35_year = resp_data[\"qa_salary_after_3.5_years\"];\r",
							"    pm.expect(resp_35_year).to.eql(req_start*3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"Test person_name\", () => {\r",
							"    var u_name = resp_data.person.u_name[0];\r",
							"    pm.expect(u_name).to.eql(\"Valery\");\r",
							"});\r",
							"pm.test(\"Test person_age\", () => {\r",
							"    var u_age = resp_data.person.u_age;\r",
							"    pm.expect(u_age).to.eql(23);\r",
							"});\r",
							"pm.test(\"Test person_salary\", () => {\r",
							"    var salary_5_years = resp_data.person.u_salary_5_years;\r",
							"    pm.expect(salary_5_years).to.eql(req_start*4.2);\r",
							"});\r",
							"\r",
							"\r",
							"var person = resp_data.person\r",
							"console.log(person);\r",
							"for (var i in person){\r",
							"    console.log(\"Person_console = \" + i + \" = \" + person[i]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "start_qa_salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_2",
					"host": [
						"{{url}}user_info_2"
					]
				}
			},
			"response": []
		}
	]
}